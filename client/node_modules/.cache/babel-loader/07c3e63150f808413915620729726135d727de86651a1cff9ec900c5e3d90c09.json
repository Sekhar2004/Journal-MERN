{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\New-Diary\\\\amigo\\\\client\\\\src\\\\components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport GlobalContext from \"../Context/GlobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(GlobalContext);\n  if (isAuthenticated) return children;else return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 14\n  }, this);\n};\n_s(PrivateRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","GlobalContext","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/New-Diary/amigo/client/src/components/PrivateRoute.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport GlobalContext from \"../Context/GlobalContext\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n\tconst { isAuthenticated } = useContext(GlobalContext);\r\n\tif (isAuthenticated) return children;\r\n\telse return <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAgB,CAAC,GAAGR,UAAU,CAACE,aAAa,CAAC;EACrD,IAAIM,eAAe,EAAE,OAAOF,QAAQ,CAAC,KAChC,oBAAOF,OAAA,CAACH,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAACN,EAAA,CAJIF,YAAY;AAAAS,EAAA,GAAZT,YAAY;AAMlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}